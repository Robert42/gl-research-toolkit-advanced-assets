#include "uuids.as"
#include "common/textures/uuids.as"

void registerTextures(ResourceIndex@ index)
{
  TextureSampler samplerInterpolated;
  
  TextureImportSettings import_diff;
  import_diff.format = TextureFormat::RGB;
  import_diff.type = TextureType::INT8;
  
  TextureImportSettings import_bump;
  import_bump.format = TextureFormat::R;
  import_bump.type = TextureType::INT8;
  import_bump.sourceIsBumpMap = true;
  
  TextureImportSettings import_srmo_from_spec_and_ao;
  import_srmo_from_spec_and_ao.format = TextureFormat::RGBA;
  import_srmo_from_spec_and_ao.type = TextureType::UINT8;
  import_srmo_from_spec_and_ao.force_value.g = 0.5;
  import_srmo_from_spec_and_ao.force_value.b = 0.0;
  import_srmo_from_spec_and_ao.red_channel_suffix = "_spec.tga";
  import_srmo_from_spec_and_ao.alpha_channel_suffix = "_ao.png";
  import_srmo_from_spec_and_ao.merge_red_as_grey = true;
  import_srmo_from_spec_and_ao.merge_alpha_as_grey = true;
  
  TextureImportSettings import_srmo_from_spec_and_metal;
  import_srmo_from_spec_and_metal.format = TextureFormat::RGBA;
  import_srmo_from_spec_and_metal.type = TextureType::UINT8;
  import_srmo_from_spec_and_metal.force_value.g = 0.5;
  import_srmo_from_spec_and_metal.force_value.a = 1.0;
  import_srmo_from_spec_and_metal.red_channel_suffix = "_spec.tga";
  import_srmo_from_spec_and_metal.blue_channel_suffix = "_metal.png";
  import_srmo_from_spec_and_metal.merge_red_as_grey = true;
  import_srmo_from_spec_and_metal.merge_blue_as_grey = true;
  
  TextureImportSettings import_n;
  import_n.format = TextureFormat::RGB;
  import_n.type = TextureType::INT8;
  import_n.sourceIsNormalMap = true;
  
  TextureImportSettings import_n_inverted;
  import_n_inverted = import_n;
  import_n_inverted.factor.x = -1;
  import_n_inverted.factor.y = -1;
                            
  // spnza_details
  index.convertTexture(textureFile: "spnza_details_diff.texture", sourceFile: "textures/sponza_details_diff.tga", settings: import_diff);
  //index.convertTexture(textureFile: "spnza_details_n.texture", sourceFile: "textures/sponza_details_ddn.tga", settings: import_n);
  //index.convertTexture(textureFile: "spnza_details_bump.texture", sourceFile: "textures/sponza_details_bump.png", settings: import_bump);
  index.convertTexture(textureFile: "spnza_details_srmo.texture", sourceFile: "textures/sponza_details_diff.tga", settings: import_srmo_from_spec_and_metal);
  index.registerTextureFile(uuid: uuids::sponza::textures::spnza_details_basic_color,
                            file: "spnza_details_diff.texture",
                            defaultSampler: samplerInterpolated);
  /*index.registerTextureFile(uuid: uuids::sponza::textures::spnza_details_n,
                            file: "spnza_details_n.texture",
                            defaultSampler: samplerInterpolated);
  index.registerTextureFile(uuid: uuids::sponza::textures::spnza_details_bump,
                            file: "spnza_details_bump.texture",
                            defaultSampler: samplerInterpolated);*/
  index.registerTextureFile(uuid: uuids::sponza::textures::spnza_details_srmo,
                            file: "spnza_details_srmo.texture",
                            defaultSampler: samplerInterpolated);
                            
  // spnza_bricks
  index.convertTexture(textureFile: "spnza_bricks_a_diff.texture", sourceFile: "textures/spnza_bricks_a_diff.tga", settings: import_diff);
  index.convertTexture(textureFile: "spnza_bricks_a_n.texture", sourceFile: "textures/spnza_bricks_a_ddn.tga", settings: import_n);
  index.convertTexture(textureFile: "spnza_bricks_a_bump.texture", sourceFile: "textures/spnza_bricks_a_bump.png", settings: import_bump);
  index.convertTexture(textureFile: "spnza_bricks_a_srmo.texture", sourceFile: "textures/spnza_bricks_a_diff.tga", settings: import_srmo_from_spec_and_ao);
  index.registerTextureFile(uuid: uuids::sponza::textures::spnza_bricks_a_basic_color,
                            file: "spnza_bricks_a_diff.texture",
                            defaultSampler: samplerInterpolated);
  index.registerTextureFile(uuid: uuids::sponza::textures::spnza_bricks_a_n,
                            file: "spnza_bricks_a_n.texture",
                            defaultSampler: samplerInterpolated);
  index.registerTextureFile(uuid: uuids::sponza::textures::spnza_bricks_a_bump,
                            file: "spnza_bricks_a_bump.texture",
                            defaultSampler: samplerInterpolated);
  index.registerTextureFile(uuid: uuids::sponza::textures::spnza_bricks_a_srmo,
                            file: "spnza_bricks_a_srmo.texture",
                            defaultSampler: samplerInterpolated);
                            
                            
  // sponza_column_a
  index.convertTexture(textureFile: "sponza_column_a_diff.texture", sourceFile: "textures/sponza_column_a_diff.tga", settings: import_diff);   
  index.convertTexture(textureFile: "sponza_column_a_n.texture", sourceFile: "textures/sponza_column_a_ddn.tga", settings: import_n);
  index.convertTexture(textureFile: "sponza_column_a_bump.texture", sourceFile: "textures/sponza_column_a_bump.png", settings: import_bump);
  index.convertTexture(textureFile: "sponza_column_a_srmo.texture", sourceFile: "textures/sponza_column_a_diff.tga", settings: import_srmo_from_spec_and_ao);
  index.registerTextureFile(uuid: uuids::sponza::textures::sponza_column_a_basic_color,
                            file: "sponza_column_a_diff.texture",
                            defaultSampler: samplerInterpolated);
  index.registerTextureFile(uuid: uuids::sponza::textures::sponza_column_a_n,
                            file: "sponza_column_a_n.texture",
                            defaultSampler: samplerInterpolated);
  index.registerTextureFile(uuid: uuids::sponza::textures::sponza_column_a_bump,
                            file: "sponza_column_a_bump.texture",
                            defaultSampler: samplerInterpolated);
  index.registerTextureFile(uuid: uuids::sponza::textures::sponza_column_a_srmo,
                            file: "sponza_column_a_srmo.texture",
                            defaultSampler: samplerInterpolated);
    
  // sponza_column_b
  index.convertTexture(textureFile: "sponza_column_b_diff.texture", sourceFile: "textures/sponza_column_b_diff.tga", settings: import_diff);   
  index.convertTexture(textureFile: "sponza_column_b_n.texture", sourceFile: "textures/sponza_column_b_ddn.tga", settings: import_n);
  index.convertTexture(textureFile: "sponza_column_b_bump.texture", sourceFile: "textures/sponza_column_b_bump.png", settings: import_bump);
  index.convertTexture(textureFile: "sponza_column_b_srmo.texture", sourceFile: "textures/sponza_column_b_diff.tga", settings: import_srmo_from_spec_and_ao);
  index.registerTextureFile(uuid: uuids::sponza::textures::sponza_column_b_basic_color,
                            file: "sponza_column_b_diff.texture",
                            defaultSampler: samplerInterpolated);
  index.registerTextureFile(uuid: uuids::sponza::textures::sponza_column_b_n,
                            file: "sponza_column_b_n.texture",
                            defaultSampler: samplerInterpolated);
  index.registerTextureFile(uuid: uuids::sponza::textures::sponza_column_b_bump,
                            file: "sponza_column_b_bump.texture",
                            defaultSampler: samplerInterpolated);
  index.registerTextureFile(uuid: uuids::sponza::textures::sponza_column_b_srmo,
                            file: "sponza_column_b_srmo.texture",
                            defaultSampler: samplerInterpolated);
    
  // sponza_column_c
  index.convertTexture(textureFile: "sponza_column_c_diff.texture", sourceFile: "textures/sponza_column_c_diff.tga", settings: import_diff);   
  index.convertTexture(textureFile: "sponza_column_c_n.texture", sourceFile: "textures/sponza_column_c_ddn.tga", settings: import_n);
  index.convertTexture(textureFile: "sponza_column_c_bump.texture", sourceFile: "textures/sponza_column_c_bump.png", settings: import_bump);
  index.convertTexture(textureFile: "sponza_column_c_srmo.texture", sourceFile: "textures/sponza_column_c_diff.tga", settings: import_srmo_from_spec_and_ao);
  index.registerTextureFile(uuid: uuids::sponza::textures::sponza_column_c_basic_color,
                            file: "sponza_column_c_diff.texture",
                            defaultSampler: samplerInterpolated);
  index.registerTextureFile(uuid: uuids::sponza::textures::sponza_column_c_n,
                            file: "sponza_column_c_n.texture",
                            defaultSampler: samplerInterpolated);
  index.registerTextureFile(uuid: uuids::sponza::textures::sponza_column_c_bump,
                            file: "sponza_column_c_bump.texture",
                            defaultSampler: samplerInterpolated);
  index.registerTextureFile(uuid: uuids::sponza::textures::sponza_column_c_srmo,
                            file: "sponza_column_c_srmo.texture",
                            defaultSampler: samplerInterpolated);
    
  // sponza_ceiling
  // arch
  // roof
  
  // sponza_floor_a
  index.convertTexture(textureFile: "sponza_floor_a_diff.texture", sourceFile: "textures/sponza_floor_a_diff.tga", settings: import_diff);   
  index.convertTexture(textureFile: "sponza_floor_a_n.texture", sourceFile: "textures/sponza_floor_a_n.png", settings: import_n);
  index.convertTexture(textureFile: "sponza_floor_a_bump.texture", sourceFile: "textures/sponza_floor_a_bump.png", settings: import_bump);
  index.convertTexture(textureFile: "sponza_floor_a_srmo.texture", sourceFile: "textures/sponza_floor_a_diff.tga", settings: import_srmo_from_spec_and_ao);
  index.registerTextureFile(uuid: uuids::sponza::textures::sponza_floor_a_basic_color,
                            file: "sponza_floor_a_diff.texture",
                            defaultSampler: samplerInterpolated);
  index.registerTextureFile(uuid: uuids::sponza::textures::sponza_floor_a_n,
                            file: "sponza_floor_a_n.texture",
                            defaultSampler: samplerInterpolated);
  index.registerTextureFile(uuid: uuids::sponza::textures::sponza_floor_a_bump,
                            file: "sponza_floor_a_bump.texture",
                            defaultSampler: samplerInterpolated);
  index.registerTextureFile(uuid: uuids::sponza::textures::sponza_floor_a_srmo,
                            file: "sponza_floor_a_srmo.texture",
                            defaultSampler: samplerInterpolated);
}

void registerMaterials(ResourceIndex@ index)
{
  TexturedMaterial dummyMaterial;
  
  TexturedMaterial dummyMaskedTwoSidedMaterial;
  dummyMaskedTwoSidedMaterial.masked = true;
  dummyMaskedTwoSidedMaterial.two_sided = true;
  
  PlainColorMaterial debuggingText;
  debuggingText.base_color = vec3(0);
  debuggingText.emission = vec3(1);
  
  
  TexturedMaterial details_material;
  details_material.basecolor_map = TextureHandle(uuids::sponza::textures::spnza_details_basic_color);
  //details_material.normal_map = TextureHandle(uuids::sponza::textures::spnza_details_n);
  //details_material.height_map = TextureHandle(uuids::sponza::textures::spnza_details_bump);
  details_material.srmo_map = TextureHandle(uuids::sponza::textures::spnza_details_srmo);
  details_material.srmo_range_0 = vec4(0.0, 0, 0, 0.00);
  details_material.srmo_range_1 = vec4(0.5, 1, 1, 1.00);
  index.registerMaterial(uuid: uuids::sponza::materials::details,
                         material: details_material);
                         
  TexturedMaterial bricks_material;
  bricks_material.basecolor_map = TextureHandle(uuids::sponza::textures::spnza_bricks_a_basic_color);
  bricks_material.normal_map = TextureHandle(uuids::sponza::textures::spnza_bricks_a_n);
  bricks_material.height_map = TextureHandle(uuids::sponza::textures::spnza_bricks_a_bump);
  bricks_material.srmo_map = TextureHandle(uuids::sponza::textures::spnza_bricks_a_srmo);
  bricks_material.srmo_range_0 = vec4(0.25, 0, 0, 0);
  bricks_material.srmo_range_1 = vec4(0.75, 1, 1, 1);
  index.registerMaterial(uuid: uuids::sponza::materials::bricks,
                         material: bricks_material);
                         
  TexturedMaterial column_a_material;
  column_a_material.basecolor_map = TextureHandle(uuids::sponza::textures::sponza_column_a_basic_color);
  column_a_material.normal_map = TextureHandle(uuids::sponza::textures::sponza_column_a_n);
  column_a_material.height_map = TextureHandle(uuids::sponza::textures::sponza_column_a_bump);
  column_a_material.srmo_map = TextureHandle(uuids::sponza::textures::sponza_column_a_srmo);
  column_a_material.srmo_range_0 = vec4(0.25, 0, 0, 0);
  column_a_material.srmo_range_1 = vec4(0.75, 1, 1, 1);  
  index.registerMaterial(uuid: uuids::sponza::materials::column_a,
                         material: column_a_material);
                         
  TexturedMaterial column_b_material;
  column_b_material.basecolor_map = TextureHandle(uuids::sponza::textures::sponza_column_b_basic_color);
  column_b_material.normal_map = TextureHandle(uuids::sponza::textures::sponza_column_b_n);
  column_b_material.height_map = TextureHandle(uuids::sponza::textures::sponza_column_b_bump);
  column_b_material.srmo_map = TextureHandle(uuids::sponza::textures::sponza_column_b_srmo);
  column_b_material.srmo_range_0 = vec4(0.25, 0, 0, 0);
  column_b_material.srmo_range_1 = vec4(0.75, 1, 1, 1);  
  index.registerMaterial(uuid: uuids::sponza::materials::column_b,
                         material: column_b_material);
                         
  TexturedMaterial column_c_material;
  column_c_material.basecolor_map = TextureHandle(uuids::sponza::textures::sponza_column_c_basic_color);
  column_c_material.normal_map = TextureHandle(uuids::sponza::textures::sponza_column_c_n);
  column_c_material.height_map = TextureHandle(uuids::sponza::textures::sponza_column_c_bump);
  column_c_material.srmo_map = TextureHandle(uuids::sponza::textures::sponza_column_c_srmo);
  column_c_material.srmo_range_0 = vec4(0.25, 0, 0, 0);
  column_c_material.srmo_range_1 = vec4(0.75, 1, 1, 1);  
  index.registerMaterial(uuid: uuids::sponza::materials::column_c,
                         material: column_c_material);
  
  index.registerMaterial(uuid: uuids::sponza::materials::ceiling,
                         material: dummyMaterial);
  
  index.registerMaterial(uuid: uuids::sponza::materials::arch,
                         material: dummyMaterial);
  
  index.registerMaterial(uuid: uuids::sponza::materials::roof,
                         material: dummyMaterial);
                         
  TexturedMaterial floor_material;
  floor_material.basecolor_map = TextureHandle(uuids::sponza::textures::sponza_floor_a_basic_color);
  floor_material.normal_map = TextureHandle(uuids::sponza::textures::sponza_floor_a_n);
  floor_material.height_map = TextureHandle(uuids::sponza::textures::sponza_floor_a_bump);
  floor_material.srmo_map = TextureHandle(uuids::sponza::textures::sponza_floor_a_srmo);
  floor_material.srmo_range_0 = vec4(0.25, 0, 0, 0);
  floor_material.srmo_range_1 = vec4(0.75, 1, 1, 1);                     
  index.registerMaterial(uuid: uuids::sponza::materials::floor,
                         material: floor_material);
  
  index.registerMaterial(uuid: uuids::sponza::materials::flagpole,
                         material: dummyMaterial);
  
  index.registerMaterial(uuid: uuids::sponza::materials::vase_hanging,
                         material: dummyMaterial);
  
  index.registerMaterial(uuid: uuids::sponza::materials::chain,
                         material: dummyMaskedTwoSidedMaterial);
  
  index.registerMaterial(uuid: uuids::sponza::materials::vase,
                         material: dummyMaterial);
  
  index.registerMaterial(uuid: uuids::sponza::materials::vase_round,
                         material: dummyMaterial);
  
  index.registerMaterial(uuid: uuids::sponza::materials::vase_foliage,
                         material: dummyMaskedTwoSidedMaterial);
  
  index.registerMaterial(uuid: uuids::sponza::materials::fabric_a,
                         material: dummyMaterial);
  
  index.registerMaterial(uuid: uuids::sponza::materials::fabric_b,
                         material: dummyMaterial);
  
  index.registerMaterial(uuid: uuids::sponza::materials::fabric_c,
                         material: dummyMaterial);
  
  index.registerMaterial(uuid: uuids::sponza::materials::fabric_d,
                         material: dummyMaterial);
  
  index.registerMaterial(uuid: uuids::sponza::materials::fabric_e,
                         material: dummyMaterial);
  
  index.registerMaterial(uuid: uuids::sponza::materials::fabric_f,
                         material: dummyMaterial);
  
  index.registerMaterial(uuid: uuids::sponza::materials::fabric_g,
                         material: dummyMaterial);
  
  index.registerMaterial(uuid: uuids::sponza::materials::leaf,
                         material: dummyMaskedTwoSidedMaterial);
  
  index.registerMaterial(uuid: uuids::sponza::materials::lion_shield,
                         material: dummyMaterial);
  
  index.registerMaterial(uuid: uuids::sponza::materials::lion,
                         material: dummyMaterial);
  
  index.registerMaterial(uuid: uuids::sponza::materials::strange_plate,
                         material: dummyMaterial);
  
  
  TexturedMaterial material_test;
  material_test.basecolor_map = TextureHandle(uuids::textures::fruit_plate_256x256);
  index.registerMaterial(uuid: uuids::sponza::materials::material_test,
                         material: material_test);
  
  index.registerMaterial(uuid: uuids::sponza::materials::texture_frame_test,
                         material: debuggingText);
}

void registerScene(ResourceIndex@ index)
{
  SceneGraphImportSettings importSettings;
  
  importSettings.materialUuids['details'] = uuids::sponza::materials::details;
  importSettings.materialUuids['bricks'] = uuids::sponza::materials::bricks;
  importSettings.materialUuids['column_a'] = uuids::sponza::materials::column_a;
  importSettings.materialUuids['column_b'] = uuids::sponza::materials::column_b;
  importSettings.materialUuids['column_c'] = uuids::sponza::materials::column_c;
  importSettings.materialUuids['ceiling'] = uuids::sponza::materials::ceiling;
  importSettings.materialUuids['arch'] = uuids::sponza::materials::arch;
  importSettings.materialUuids['roof'] = uuids::sponza::materials::roof;
  importSettings.materialUuids['floor'] = uuids::sponza::materials::floor;
  importSettings.materialUuids['flagpole'] = uuids::sponza::materials::flagpole;
  importSettings.materialUuids['vase_hanging'] = uuids::sponza::materials::vase_hanging;
  importSettings.materialUuids['chain'] = uuids::sponza::materials::chain;
  importSettings.materialUuids['vase'] = uuids::sponza::materials::vase;
  importSettings.materialUuids['vase_round'] = uuids::sponza::materials::vase_round;
  importSettings.materialUuids['vase_foliage'] = uuids::sponza::materials::vase_foliage;
  importSettings.materialUuids['fabric_a'] = uuids::sponza::materials::fabric_a;
  importSettings.materialUuids['fabric_b'] = uuids::sponza::materials::fabric_b;
  importSettings.materialUuids['fabric_c'] = uuids::sponza::materials::fabric_c;
  importSettings.materialUuids['fabric_d'] = uuids::sponza::materials::fabric_d;
  importSettings.materialUuids['fabric_e'] = uuids::sponza::materials::fabric_e;
  importSettings.materialUuids['fabric_f'] = uuids::sponza::materials::fabric_f;
  importSettings.materialUuids['fabric_g'] = uuids::sponza::materials::fabric_g;
  importSettings.materialUuids['leaf'] = uuids::sponza::materials::leaf;
  importSettings.materialUuids['lion_shield'] = uuids::sponza::materials::lion_shield;
  importSettings.materialUuids['lion'] = uuids::sponza::materials::lion;
  importSettings.materialUuids['strange-plate'] = uuids::sponza::materials::strange_plate;
  importSettings.materialUuids['material-test'] = uuids::sponza::materials::material_test;
  importSettings.materialUuids['texture-frame-text'] = uuids::sponza::materials::texture_frame_test;
  
  index.label[uuids::sponza::materials::details] = 'details';
  index.label[uuids::sponza::materials::bricks] = 'bricks';
  index.label[uuids::sponza::materials::column_a] = 'column_a';
  index.label[uuids::sponza::materials::column_b] = 'column_b';
  index.label[uuids::sponza::materials::column_c] = 'column_c';
  index.label[uuids::sponza::materials::ceiling] = 'ceiling';
  index.label[uuids::sponza::materials::arch] = 'arch';
  index.label[uuids::sponza::materials::roof] = 'roof';
  index.label[uuids::sponza::materials::floor] = 'floor';
  index.label[uuids::sponza::materials::flagpole] = 'flagpole';
  index.label[uuids::sponza::materials::vase_hanging] = 'vase_hanging';
  index.label[uuids::sponza::materials::chain] = 'chain';
  index.label[uuids::sponza::materials::vase] = 'vase';
  index.label[uuids::sponza::materials::vase_round] = 'vase_round';
  index.label[uuids::sponza::materials::vase_foliage] = 'vase_foliage';
  index.label[uuids::sponza::materials::fabric_a] = 'fabric_a';
  index.label[uuids::sponza::materials::fabric_b] = 'fabric_b';
  index.label[uuids::sponza::materials::fabric_c] = 'fabric_c';
  index.label[uuids::sponza::materials::fabric_d] = 'fabric_d';
  index.label[uuids::sponza::materials::fabric_e] = 'fabric_e';
  index.label[uuids::sponza::materials::fabric_f] = 'fabric_f';
  index.label[uuids::sponza::materials::fabric_g] = 'fabric_g';
  index.label[uuids::sponza::materials::leaf] = 'leaf';
  index.label[uuids::sponza::materials::lion_shield] = 'lion_shield';
  index.label[uuids::sponza::materials::lion] = 'lion';
  index.label[uuids::sponza::materials::strange_plate] = 'strange-plate';
  index.label[uuids::sponza::materials::material_test] = 'material-test';
  index.label[uuids::sponza::materials::texture_frame_test] = 'texture-frame-text';
    
  importSettings.cameraUuids['EyeHeight'] = uuids::sponza::cameras::eyeHeight;
  importSettings.lightUuids['Sun'] = uuids::sponza::lights::sunLight;
  
  index.convertSceneGraph(sceneGraphFile: "sponza-scenery.scene-graph",
                          sourceFile: "sponza.blend",
                          groupToImport: "scenery",
                          settings: importSettings);
  index.convertSceneGraph(sceneGraphFile: "sponza-building.scene-graph",
                          sourceFile: "sponza.blend",
                          groupToImport: "sponza-building",
                          settings: importSettings);
  index.convertSceneGraph(sceneGraphFile: "sponza-decoration.scene-graph",
                          sourceFile: "sponza.blend",
                          groupToImport: "sponza-decoraton",
                          settings: importSettings);
  index.convertSceneGraph(sceneGraphFile: "sponza-fabrics.scene-graph",
                          sourceFile: "sponza.blend",
                          groupToImport: "sponza-fabrics",
                          settings: importSettings);
  index.convertSceneGraph(sceneGraphFile: "sponza-foliage.scene-graph",
                          sourceFile: "sponza.blend",
                          groupToImport: "sponza-foliage",
                          settings: importSettings);
  index.convertSceneGraph(sceneGraphFile: "sponza-unmovable-decoration.scene-graph",
                          sourceFile: "sponza.blend",
                          groupToImport: "sponza-unmovable-decoraton",
                          settings: importSettings);
  index.convertSceneGraph(sceneGraphFile: "texture-frame.scene-graph",
                          sourceFile: "sponza-debugging-helpers.blend",
                          groupToImport: "texture-frame",
                          settings: importSettings);
                          
  index.registerSceneLayerFile(uuid: uuids::sponza::sceneLayers::sponza_scenery,
                               file: "sponza-scenery.scene-layer");
  index.registerSceneLayerFile(uuid: uuids::sponza::sceneLayers::sponza_building,
                               file: "sponza-building.scene-layer");
  index.registerSceneLayerFile(uuid: uuids::sponza::sceneLayers::sponza_decoration,
                               file: "sponza-decoration.scene-layer");
  index.registerSceneLayerFile(uuid: uuids::sponza::sceneLayers::sponza_fabrics,
                               file: "sponza-fabrics.scene-layer");
  index.registerSceneLayerFile(uuid: uuids::sponza::sceneLayers::sponza_foliage,
                               file: "sponza-foliage.scene-layer");
  index.registerSceneLayerFile(uuid: uuids::sponza::sceneLayers::sponza_unmovable_decoration,
                               file: "sponza-unmovable-decoration.scene-layer");
  index.registerSceneLayerFile(uuid: uuids::sponza::sceneLayers::sponza_material_debugging,
                               file: "sponza-material-debugging.scene-layer");
  
  index.registerSceneFile(uuid: uuids::sponza::scenes::sponza_full,
                          file: "sponza-full.scene");
}

void registerLights(ResourceIndex@ index)
{
  SphereAreaLightSource sphereAreaLight;
  sphereAreaLight.radius = 3.0;
  sphereAreaLight.luminous_power *= 10000000;
  
  index.registerLightSource(uuid: uuids::sponza::lights::sunLight,
                            light: sphereAreaLight);
}

void main(ResourceIndex@ index)
{
  registerTextures(index);
  registerMaterials(index);
  registerScene(index);
  registerLights(index);
}
